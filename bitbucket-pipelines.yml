#  Template NodeJS Web Application for Azure Web App service

#  This template allows you to deploy your NodeJS web application to Azure Web App Service.
#  The workflow allows running tests, code linting and security scans on feature branches (as well as master).
#  The NodeJS application will be validated after the code is merged to master and deployment can be triggered manually.

# Prerequisites: $$AZURE_APP_ID, $AZURE_PASSWORD, $AZURE_TENANT_ID, $AZURE_RESOURCE_GROUP, $AZURE_APP_NAME setup in the Deployment variables.
# For advanced cases, please, follow examples from the pipe's README https://bitbucket.org/microsoft/azure-web-apps-deploy/src/1.0.3/README.md


image: atlassian/default-image:4

definitions:
  steps:
    - step: &build-test
        name: Build and Test
        caches:
          - node
        script:
          - npm install --force
          #- npm test
          - apt-get update
          - apt-get install zip -y
          # Exclude files to be ignored
          - zip -r relay-app.zip .
        artifacts:
          - relay-app.zip    

    - step: &code-linting
        name: Code linting
        script:
          - npm install eslint
          - npx eslint .
        caches:
          - node

    - step: &security-scan
        name: Security Scan
        script:
          # Run a security scan for sensitive data.
          # See more security tools at https://bitbucket.org/product/features/pipelines/integrations?&category=security
          - pipe: atlassian/git-secrets-scan:0.5.1

    - step: &deploy
        name: Deploy
        script:
          - pipe: atlassian/azure-web-apps-deploy:1.0.1
            variables:
              AZURE_APP_ID: $AZURE_APP_ID
              AZURE_PASSWORD: $AZURE_PASSWORD
              AZURE_TENANT_ID: $AZURE_TENANT_ID
              AZURE_RESOURCE_GROUP: $AZURE_RESOURCE_GROUP
              AZURE_APP_NAME: $AZURE_APP_NAME
              ZIP_FILE: relay-app.zip

pipelines:
  branches:
    main:
        - step: *build-test
        #- step: *code-linting
        #- step: *security-scan
        - step: *deploy
        
        
      
